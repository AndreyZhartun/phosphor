{
    "config": {
        "name": "Sample JSON data",
        "author": "@redhg"
    },
    "screens": [
        {
            "id": "screen0",
            "type": "screen",
            "content": [
                "Screen content can be a string. And that string can contain\n\nlinebreaks.",
                "",
                "Or it can be an empty string like the above entry.",
                { "type": "text", "text": "Or it can be an Object with an specific CSS 'className' property, like 'alert', currently the only one.", "className": "alert" },
                "",
                "Links to other Screens can be rendered, too. Linking to the current screen's ID will cause it to redraw. Like this:",
                {
                    "type": "link",
                    "target": "screen0",
                    "text": "> CLICK TO RELOAD THIS SCREEN"
                },
                "",
                "Linking instead to a different screen's ID will, naturally, render that screen's content.",
                {
                    "type": "link",
                    "target": "screen1",
                    "text": "> NEXT"
                }
            ]
        },
        {
            "id": "screen1",
            "type": "screen",
            "content": [
                "Text is great an all, but what about toggle buttons? Oh, yeah, we got that. Toggle buttons cycle through their states, starting with which every has 'active: true'.",
                "You can click the following button several times to cycle through it available states",
                "",
                {
                    "type": "toggle",
                    "states": [
                        {
                            "active": true,
                            "text": "> This is the first state!"
                        },
                        {
                            "active": false,
                            "text": "> This is the second state! The 'className' property is currently unsupported, it would seem :/",
                            "className": "alert"
                        },
                        {
                            "active": false,
                            "text": "> This is the third state!"
                        }
                    ]
                },
                "",
                "There's also an module that accepts user input. It's very particular, and it uses a document-wide event listener which is pretty hacky. Semm what happens when you type the following commands:\n\n",
                "BACK",
                "DIALOG",
                "IMAGE",
                {
                    "type": "prompt",
                    "prompt": "Enter command: ",
                    "className": "cursor",
                    "commands": [
                        {
                            "command": "back",
                            "action": {
                                "type": "link",
                                "target": "screen0"
                            }
                        },
                        {
                            "command": "dialog",
                            "action": {
                                "type": "dialog",
                                "target": "dialog1"
                            }
                        },
                        {
                            "command": "image",
                            "action": {
                                "type": "link",
                                "target": "screen2"
                            }
                        }
                    ]
                },
                "\n",
                {
                    "type": "link",
                    "target": "screen2",
                    "text": "> IMAGE LOADING"
                },
                {
                    "type": "link",
                    "target": "screen1",
                    "text": "> CLICK HERE TO RETURN TO THE FIRST SCREEN"
                }
            ]
        },
        {
            "id": "screen2",
            "type": "screen",
            "content": [
                "We can load images, too. Create an object of type \"bitmap\" with a src pointing to a URL and add an optional image effect className: \"luminosity\" or \"lighten\".",
                {
                    "type": "bitmap",
                    "src": "https://i.imgur.com/rDjphNY.jpg"
                },
                {
                    "type": "bitmap",
                    "src": "https://i.imgur.com/rDjphNY.jpg",
                    "className": "lighten"
                },
                {
                    "type": "bitmap",
                    "src": "https://i.imgur.com/rDjphNY.jpg",
                    "className": "luminosity"
                },
                "\n",
                "Note that as of 2020-06-12, the above blend-modes appear broken in Chrome, but work just fine in Firefox & Safari of all things.",
                "",
                {
                    "type": "link",
                    "target": "screen1",
                    "text": "> BACK"
                }
            ]
        }
    ],
    "dialogs": [
        {
            "id": "dialog1",
            "type": "alert",
            "content": [
                "this is the first line in the dialog.",
                "And this is the second line.",
                "Press <enter> to close."
            ]
        },
        {
            "id": "locked",
            "type": "alert",
            "content": [
                "Error! Keycard required."
            ]
        }
    ]
}